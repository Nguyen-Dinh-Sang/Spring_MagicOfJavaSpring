- @Autowired
- @Primary
- @Qualifier
- Scope of Bean:
    - @Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
    - @Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)
    - Default - Singleton in Spring is one instance per application context in same JVM.
    - By Gang of Four definition, have one instance of that specific class in same JVM.

- @ComponentScan
- Bean Lifecycle:
    - @PostConstruct: as soon as the bean is created, PostConstruct would be called.
    - @PreDestroy: the bean instance is being removed from container, method would be called.

- Java EE CDI: Container and Dependency Injection -> how to do Dependency Injection:
    - @Inject (@Autowired).
    - @Named (@Component, @Qualifier).
    - @Singleton (Defines a scope of Singleton).

- Removing Spring Boot:
    - Removing the dependency on spring-boot- starter.

- Close Application Context.
- Logback is an implementation for slf4j

- XML config: context
    - Define the context schema.
    - Define shortcut name.
    - Define schema location for context.

- Read values from external properties file.

@Primary.
nếu 2 class cùng impl 1 interface thì khi @Autowwired
nình có thể chỉ chích xác bằng các đặt tên giống
tên class impl.

@Qualifier("name")
đặt tên cho impl khi @Autowrited thì thêm @Qualifier
để chỉ ra class pl tương ứng.
nên đặt tên và sửa dụng nó tường mình hơn.

Bean Scope:
- In Spring, by default, any bean is a singleton.
- Prototype: get different instances of same bean.
@Scope(""): chỉ định các bean được tạo ra và sử dụng, nhưng nên làm theo kiểu bên dưới.
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)